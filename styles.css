* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: Arial, sans-serif;
}

.key {
    font-size: 6vw;
    display: inline-block;
    letter-spacing: -1vw;
    margin: 0.4vw;
    transition: transform 0.2s;
  }
  
  
  
  @keyframes pressDown1 {
    30%,
    40%,
    100% {
      transform: translateY(0);
    }
    35% {
      transform: translateY(10px);
    }
  }
  
  @keyframes pressDown2 {
    70%,
    80%,
    100% {
      transform: translateY(0);
    }
    75% {
      transform: translateY(10px);
    }
  }
  
  @keyframes pressDown3 {
    30%,
    40%,
    100% {
      transform: translateY(0);
    }
    35% {
      transform: translateY(10px);
    }
  }
  
  @keyframes pressDown4 {
    40%,
    50%,
    100% {
      transform: translateY(0);
    }
    45% {
      transform: translateY(10px);
    }
  }
  
  @keyframes pressDown5 {
    20%,
    30%,
    100% {
      transform: translateY(0);
    }
    25% {
      transform: translateY(10px);
    }
  }
  
  @keyframes pressDown6 {
    60%,
    70%,
    100% {
      transform: translateY(0);
    }
    65% {
      transform: translateY(10px);
    }
  }

  
  
  .key:nth-child(1) {
    animation: pressDown1 2s infinite;
  }
  
  .key:nth-child(2) {
    animation: pressDown2 3s infinite;
  }
  
  .key:nth-child(3) {
    animation: pressDown3 4s infinite;
  }
  
  .key:nth-child(4) {
    animation: pressDown4 2.5s infinite;
  }
  
  .key:nth-child(5) {
    animation: pressDown5 2.5s infinite;
  }
  
  .key:nth-child(6) {
    animation: pressDown6 3.5s infinite;
  }
  
  
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap');

.lives-counter {
    font-family: 'Roboto', sans-serif;
    font-size: 20px;
    display: flex;
    flex-direction: row;
}
.lives-counter.shake {
    animation: shake 0.5s ease;
  }



/* Animación para el contador de vidas al actualizarse */
@keyframes shake {
    0% {
        transform: translateX(0);
        color: black; /* Color inicial */
    }
    25% {
        transform: translateX(-5px);
        color: red; /* Color al inicio de la sacudida */
    }
    50% {
        transform: translateX(5px);
        color: red; /* Color durante la sacudida */
    }
    75% {
        transform: translateX(-5px);
        color: red; /* Color durante la sacudida */
    }
    100% {
        transform: translateX(0);
        color: black; /* Color final */
    }
}


.container {
    display: flex;
    flex-direction: column; /* Pone el canvas y los botones en columna */
    align-items: center; /* Centra horizontalmente */
    justify-content: center; /* Centra verticalmente */
}

canvas {
    border: 2px solid black;
    display: block;
    max-width: 100%;
    height: auto;
    
}

.upper-container {
    display: flex;           
    flex-direction: row;    
    justify-content: space-between; 
    align-items: center;     
    gap: 10px;              
    width: 450px; /* Asegúrate de que el contenedor ocupa todo el ancho disponible */
}


.button-container {
    display: flex;
    justify-content: center;
    flex-wrap: nowrap; /* Asegura que los botones no se envuelvan */
    margin-top: 20px;
    
  }
  
  button {
    --b: 3px;   /* border thickness */
    --s: .15em; /* size of the corner */
    --c: #282e31;
    
    padding: calc(.05em + var(--s)) calc(.3em + var(--s));
    color: var(--c);
    --_p: var(--s);
    background:
      conic-gradient(from 90deg at var(--b) var(--b),#0000 90deg,var(--c) 0)
      var(--_p) var(--_p)/calc(100% - var(--b) - 2*var(--_p)) calc(100% - var(--b) - 2*var(--_p));
    transition: .3s linear, color 0s, background-color 0s;
    outline: var(--b) solid #0000;
    outline-offset: .2em;
    flex: 1; /* Cada botón ocupa el mismo espacio proporcional */
    max-width: calc(100% / 9); /* Cada botón tiene como máximo 1/9 del ancho total */
    box-sizing: border-box; /* Asegura que el padding y borde no afecten el tamaño total del botón */
  }
  
  button:hover,
  button:focus-visible {
    --_p: 0px;
    outline-color: var(--c);
    outline-offset: .05em;
  }
  
  button:active {
    background: var(--c);
    color: #fff;
  }
  
  button {
    font-family: system-ui, sans-serif;
    font-weight: bold;
    font-size: 1.5rem; /* Ajusta el tamaño de la fuente */
    cursor: pointer;
    border: none;
    margin: .1em;
  }
  

.restart-button {
    color: blue;
    all: unset;
    
    padding: 3px;
    border-radius: 40%;
    transition: transform 0.5s ease;
}

.restart-button:hover {
    transform: translateY(-3px);
}